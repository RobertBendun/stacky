# From https://lemire.me/blog/2016/06/27/a-fast-alternative-to-the-modulo-reduction/
# max min
uniform32 fun u64 u64 -- u64 is
	over swap
	swap - 1 +  # remap from [a, b] to [0, N] where N = distance(a, b)
	random32 * 32 >> +
end

pswap32 fun ptr ptr -- is
	2dup load32 swap load32 rot swap store32 store32
end

2load32 fun ptr ptr -- u64 u64 is
	load32 swap load32 swap
end

print-array32 fun u64 ptr -- is
	begin-end-32
	"[ " puts
	while 2dup != do
		dup load32 putu " " puts
		4 +
	end 2drop
	"]" puts nl
end

parse(u64) fun ptr -- u64 is
	0 swap

	while dup load8 dup '0' >= swap '9' <= and do # result ptr
		dup load8 '0' - rot 10 * + swap 1 +
	end
	drop
end
