"posix" import

sizeof(timespec)          16  constant
timespec.tv_sec           0   constant
timespec.tv_nsec          8   constant
sizeof(timespec.tv_sec)   8   constant
sizeof(timespec.tv_nsec)  8   constant

now fun # -- seconds
	0 SYS_time syscall1
end

timespec sizeof(timespec) []byte

# seconds
sleep fun # seconds --
	timespec timespec.tv_sec  + swap store64
	timespec timespec.tv_nsec + 0 store64
	while timespec timespec SYS_nanosleep syscall2 0 < do end
end

msleep fun # miliseconds --
	timespec timespec.tv_sec  + 0 store64
	timespec timespec.tv_nsec + swap 1000000 * store64
	while timespec timespec SYS_nanosleep syscall2 0 < do end
end

era 8 []byte

# Translated to Stacky from
# http://howardhinnant.github.io/date_algorithms.html
date fun # seconds -- year month day hours minutes
	60 div                 # drop seconds
	dup 60 mod swap 60 div # get minutes
	dup 24 mod swap 24 div # get hours

	719468 + # shift epoch from 1970-01-01 to 0000-03-01
	dup 146097 div era over store64    # era
	146097 * - # doe

	dup # yoe
		over 1460 div -
		over 36524 div +
		over 146096 div -
		365 div
		dup era load64 400 * +
		swap rot

	# doy
	swap dup  365 * over 4 div + over 100 div -
		rot swap - swap drop

	# mp
	dup 5 * 2 + 153 div

	# d
	2dup 153 * 2 + 5 div - 1 +
	rot drop swap

	# m
	dup 10 < if 3 + else 9 - end
	rot swap dup 2 <= + swap
end

+minutes fun 60  * + end
+hours fun 3600  * + end
+days fun 86400  * + end
+weeks fun 604800 * + end

-minutes fun 60  * - end
-hours fun 3600  * - end
-days fun 86400  * - end
-weeks fun 604800 * - end
